{"ast":null,"code":"import { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore'; // Import the functions you need from the SDKs you need\n\nimport { initializeApp } from \"firebase/app\"; //create an app instance\n\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport signin from \"../routes/signin/signin.component\";\nimport { async } from '@firebase/util'; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB8FvXvvHKJ3ax1iOArErBJwePdfWO7DBE\",\n  authDomain: \"crown-clothing-db-39d8e.firebaseapp.com\",\n  projectId: \"crown-clothing-db-39d8e\",\n  storageBucket: \"crown-clothing-db-39d8e.appspot.com\",\n  messagingSenderId: \"233166638813\",\n  appId: \"1:233166638813:web:a2842dbd48732568c09534\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signinwithgooglePopup = () => signInWithPopup(auth, provider); ////=---------firebase db\n\nconst db = getFirestore();\nexport const createUserDocFrom = async userAuth => {\n  console.log(db);\n  console.log(userAuth);\n  const userDocRef = doc(db, 'users', userAuth.user.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayname,\n      email\n    } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await setDoc(displayname, email, createAt);\n    } catch (error) {\n      console.log('create user error', error.message);\n    }\n  } else {}\n\n  return userDocRef;\n};","map":{"version":3,"names":["getFirestore","doc","getDoc","setDoc","initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","signin","async","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signinwithgooglePopup","db","createUserDocFrom","userAuth","console","log","userDocRef","user","uid","userSnapshot","exists","displayname","email","createAt","Date","error","message"],"sources":["/Users/maclyuqi/clothes-store/src/utilities/firebase.utils.js"],"sourcesContent":["import {getFirestore,doc,getDoc,setDoc} from 'firebase/firestore'\n\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";//create an app instance\nimport {getAuth,signInWithRedirect,signInWithPopup,GoogleAuthProvider} from 'firebase/auth'\nimport signin from \"../routes/signin/signin.component\";\nimport { async } from '@firebase/util';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB8FvXvvHKJ3ax1iOArErBJwePdfWO7DBE\",\n  authDomain: \"crown-clothing-db-39d8e.firebaseapp.com\",\n  projectId: \"crown-clothing-db-39d8e\",\n  storageBucket: \"crown-clothing-db-39d8e.appspot.com\",\n  messagingSenderId: \"233166638813\",\n  appId: \"1:233166638813:web:a2842dbd48732568c09534\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters(\n    {\n        prompt : \"select_account\"\n    }\n);\n\nexport const auth = getAuth();\nexport const signinwithgooglePopup = () => signInWithPopup(auth,provider);\n\n////=---------firebase db\n\nconst db = getFirestore(); \nexport const createUserDocFrom = async (userAuth) =>{\n    console.log(db);\n    console.log(userAuth);\n    const userDocRef = doc(db,'users',userAuth.user.uid);\n    console.log(userDocRef);\n\n    const userSnapshot = await getDoc(userDocRef)\n    console.log(userSnapshot);\n    console.log(userSnapshot.exists());\n\n    if(!userSnapshot.exists())\n    {\n        const {displayname,email} = userAuth;\n        const createAt = new Date();\n        try {\n            await setDoc(\n                displayname,\n                email,\n                createAt,\n            )\n        } catch (error) {\n            console.log('create user error', error.message);\n        }\n    }\n    else\n    {\n\n    }\n    return userDocRef;\n};\n"],"mappings":"AAAA,SAAQA,YAAR,EAAqBC,GAArB,EAAyBC,MAAzB,EAAgCC,MAAhC,QAA6C,oBAA7C,C,CAGA;;AACA,SAASC,aAAT,QAA8B,cAA9B,C,CAA6C;;AAC7C,SAAQC,OAAR,EAAgBC,kBAAhB,EAAmCC,eAAnC,EAAmDC,kBAAnD,QAA4E,eAA5E;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CACA;AACA;AAEA;;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,yCAFS;EAGrBC,SAAS,EAAE,yBAHU;EAIrBC,aAAa,EAAE,qCAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACA,MAAMC,WAAW,GAAGd,aAAa,CAACO,cAAD,CAAjC;AACA,MAAMQ,QAAQ,GAAG,IAAIX,kBAAJ,EAAjB;AACAW,QAAQ,CAACC,mBAAT,CACI;EACIC,MAAM,EAAG;AADb,CADJ;AAMA,OAAO,MAAMC,IAAI,GAAGjB,OAAO,EAApB;AACP,OAAO,MAAMkB,qBAAqB,GAAG,MAAMhB,eAAe,CAACe,IAAD,EAAMH,QAAN,CAAnD,C,CAEP;;AAEA,MAAMK,EAAE,GAAGxB,YAAY,EAAvB;AACA,OAAO,MAAMyB,iBAAiB,GAAG,MAAOC,QAAP,IAAmB;EAChDC,OAAO,CAACC,GAAR,CAAYJ,EAAZ;EACAG,OAAO,CAACC,GAAR,CAAYF,QAAZ;EACA,MAAMG,UAAU,GAAG5B,GAAG,CAACuB,EAAD,EAAI,OAAJ,EAAYE,QAAQ,CAACI,IAAT,CAAcC,GAA1B,CAAtB;EACAJ,OAAO,CAACC,GAAR,CAAYC,UAAZ;EAEA,MAAMG,YAAY,GAAG,MAAM9B,MAAM,CAAC2B,UAAD,CAAjC;EACAF,OAAO,CAACC,GAAR,CAAYI,YAAZ;EACAL,OAAO,CAACC,GAAR,CAAYI,YAAY,CAACC,MAAb,EAAZ;;EAEA,IAAG,CAACD,YAAY,CAACC,MAAb,EAAJ,EACA;IACI,MAAM;MAACC,WAAD;MAAaC;IAAb,IAAsBT,QAA5B;IACA,MAAMU,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;;IACA,IAAI;MACA,MAAMlC,MAAM,CACR+B,WADQ,EAERC,KAFQ,EAGRC,QAHQ,CAAZ;IAKH,CAND,CAME,OAAOE,KAAP,EAAc;MACZX,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCU,KAAK,CAACC,OAAvC;IACH;EACJ,CAbD,MAeA,CAEC;;EACD,OAAOV,UAAP;AACH,CA7BM"},"metadata":{},"sourceType":"module"}